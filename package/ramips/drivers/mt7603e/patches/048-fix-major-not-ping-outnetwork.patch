diff -uNr a/rlt_wifi/common/cmm_mat_iparp.c b/rlt_wifi/common/cmm_mat_iparp.c
--- a/rlt_wifi/common/cmm_mat_iparp.c	2016-05-26 17:22:23.000000000 +0800
+++ b/rlt_wifi/common/cmm_mat_iparp.c	2018-09-17 17:37:14.000000000 +0800
@@ -345,13 +345,15 @@
 	
 }
 
-
+UCHAR BOARDCAST_ARR[] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
+UCHAR ETHER_MACADDR[6];
 static NDIS_STATUS IPMacTable_init(
 	IN MAT_STRUCT *pMatCfg)
 {
 	IPMacMappingTable *pIPMacTable;
 	IPMacMappingEntry *pEntry = NULL;
 
+	RtmpFlashRead(ETHER_MACADDR, 0x40000 + 0x28, MAC_ADDR_LEN);
 
 	if (pMatCfg->MatTableSet.IPMacTable != NULL)
 	{
@@ -555,7 +557,13 @@
 	/* Fetch the IP addres from the packet header. */
 	getDstIPFromIpPkt(pLayerHdr, &dstIP);
 	pMacAddr = IPMacTableLookUp(pMatCfg, dstIP); 
-	
+	if (memcmp(pMacAddr, BOARDCAST_ARR, 6) == 0)
+	{
+		DBGPRINT(RT_DEBUG_ERROR, ("func=%s() line=%d the pMacAddr is boardcast! \n", __FUNCTION__, __LINE__));
+		DBGPRINT(RT_DEBUG_ERROR, ("func=%s() line=%d update pMacAddr to %02x:%02x:%02x:%02x:%02x:%02x ! \n", __FUNCTION__, __LINE__, PRINT_MAC(ETHER_MACADDR)));
+		memcpy(pMacAddr, ETHER_MACADDR, 6);
+	}
+
 #ifdef MAC_REPEATER_SUPPORT
 	if (pAd == NULL)
 	{
