diff -urN a/rlt_wifi/ap/ap_apcli.c b/rlt_wifi/ap/ap_apcli.c
--- a/rlt_wifi/ap/ap_apcli.c	2018-09-08 18:21:54.182576201 +0800
+++ b/rlt_wifi/ap/ap_apcli.c	2018-09-08 18:23:29.969742679 +0800
@@ -3027,7 +3027,7 @@
 		if (NdisEqualMemory(pCfgSsid, pBssEntry->Ssid, CfgSsidLen) &&
 							(pBssEntry->SsidLen == CfgSsidLen) &&
 							(pSsidBssTab->BssNr < MAX_LEN_OF_BSS_TABLE) &&
-							(MAC_ADDR_EQUAL(pApCliEntry->CfgApCliBssid, ZERO_MAC_ADDR) ||
+							(pApCliEntry->LockMacEn == false ||
 							MAC_ADDR_EQUAL(pApCliEntry->CfgApCliBssid, pBssEntry->Bssid)))
 		{
 
diff -urN a/rlt_wifi/common/cmm_profile.c b/rlt_wifi/common/cmm_profile.c
--- a/rlt_wifi/common/cmm_profile.c	2018-09-08 18:22:08.958433645 +0800
+++ b/rlt_wifi/common/cmm_profile.c	2018-09-08 18:23:42.141651231 +0800
@@ -781,6 +781,25 @@
 	}
 
 	/*ApCliBssid*/
+
+	/*ApCliLockMac*/
+	if(RTMPGetKeyParameter("ApCliLockMac", tmpbuf, MAX_PARAM_BUFFER_SIZE, buffer, FALSE))
+	{
+		for (i = 0, macptr = rstrtok(tmpbuf,";"); (macptr && i < MAX_APCLI_NUM); macptr = rstrtok(NULL,";"), i++)
+		{
+			pApCliEntry = &pAd->ApCfg.ApCliTab[i];
+			if ((strncmp(macptr, "0", 1) == 0))
+				pApCliEntry->LockMacEn = FALSE;
+			else if ((strncmp(macptr, "1", 1) == 0))
+				pApCliEntry->LockMacEn = TRUE;
+	        else
+				pApCliEntry->LockMacEn = FALSE;
+
+			DBGPRINT(RT_DEBUG_TRACE, ("ApCliEntry[%d].LockMacEn=%d\n", i, pApCliEntry->LockMacEn));
+	    }
+	}
+	/*ApCliLockMac*/
+
 	if(RTMPGetKeyParameter("ApCliBssid", tmpbuf, MAX_PARAM_BUFFER_SIZE, buffer, TRUE))
 	{
 		for (i=0, macptr = rstrtok(tmpbuf,";"); (macptr && i < MAX_APCLI_NUM); macptr = rstrtok(NULL,";"), i++) 
diff -urN a/rlt_wifi/include/rtmp.h b/rlt_wifi/include/rtmp.h
--- a/rlt_wifi/include/rtmp.h	2018-09-08 18:22:45.394104488 +0800
+++ b/rlt_wifi/include/rtmp.h	2018-09-08 18:23:59.165528312 +0800
@@ -2956,7 +2956,7 @@
 	
 	BOOLEAN Enable;		/* Set it as 1 if the apcli interface was configured to "1"  or by iwpriv cmd "ApCliEnable" */
 	BOOLEAN Valid;		/* Set it as 1 if the apcli interface associated success to remote AP. */
-
+	BOOLEAN LockMacEn;
 	MLME_AUX MlmeAux;			/* temporary settings used during MLME state machine */
 
 	UCHAR MacTabWCID;	/*WCID value, which point to the entry of ASIC Mac table. */
