diff -uNr a/iwlib.h b/iwlib.h
--- a/iwlib.h	2018-08-16 13:31:32.000000000 +0000
+++ b/iwlib.h	2018-08-16 09:31:10.000000000 +0000
@@ -94,6 +94,8 @@
 extern "C" {
 #endif
 
+#define MAX_LEN_OF_MAC_TABLE  64
+
 /****************************** DEBUG ******************************/
 
 //#define DEBUG 1
@@ -136,6 +138,60 @@
 #define IW_EV_QUAL_PK_LEN	(IW_EV_LCP_PK_LEN + sizeof(struct iw_quality))
 #define IW_EV_POINT_PK_LEN	(IW_EV_LCP_PK_LEN + 4)
 
+typedef union _MACHTTRANSMIT_SETTING {
+	struct  {
+unsigned short  MCS:7;  // MCS
+unsigned short  BW:1;  //channel bandwidth 20MHz or 40 MHz
+unsigned short  ShortGI:1;
+unsigned short  STBC:2; //SPACE
+unsigned short  rsv:3; 
+unsigned short  MODE:2; // Use definition MODE_xxx.
+}  field;
+unsigned short  word;
+} MACHTTRANSMIT_SETTING, *PMACHTTRANSMIT_SETTING;
+typedef struct _RT_802_11_MAC_ENTRY {
+
+	unsigned char ApIdx;
+	unsigned char Addr[6];
+	unsigned char Aid;
+	unsigned char Psm;		/* 0:PWR_ACTIVE, 1:PWR_SAVE */
+	unsigned char MimoPs;		/* 0:MMPS_STATIC, 1:MMPS_DYNAMIC, 3:MMPS_Enabled */
+	signed char AvgRssi0;
+	signed char AvgRssi1;
+	signed char AvgRssi2;
+	unsigned int ConnectedTime;
+	MACHTTRANSMIT_SETTING TxRate;
+#ifdef CUSTOMER_DCC_FEATURE
+	unsigned int AvgSnr;
+#endif
+	unsigned int LastRxRate;
+	unsigned int LastTxRate;
+	unsigned int ReRxRate;
+	unsigned int ReTxRate;
+
+#ifndef CUSTOMER_DCC_FEATURE
+	short StreamSnr[3];				/* BF SNR from RXWI. Units=0.25 dB. 22 dB offset removed */
+	short SoundingRespSnr[3];			/* SNR from Sounding Response. Units=0.25 dB. 22 dB offset removed */
+/*	SHORT TxPER;	*/					/* TX PER over the last second. Percent */
+/*	SHORT reserved;*/
+#endif /* RTMP_RBUS_SUPPORT */	
+
+//	UINT32 LastTxRate;
+/*
+	unsigned char  ApIdx;
+	unsigned char  Addr[6];
+	unsigned char  Aid;
+unsigned char  Psm;  // 0:PWR_ACTIVE, 1:PWR_SAVE
+unsigned char  MimoPs; // 0:MMPS_STATIC, 1:MMPS_DYNAMIC, 3:MMPS_Enabled
+MACHTTRANSMIT_SETTING  TxRate;
+*/
+} RT_802_11_MAC_ENTRY, *PRT_802_11_MAC_ENTRY;
+typedef struct _RT_802_11_MAC_TABLE {
+	unsigned long  Num;
+	RT_802_11_MAC_ENTRY Entry[MAX_LEN_OF_MAC_TABLE];
+} RT_802_11_MAC_TABLE, *PRT_802_11_MAC_TABLE;
+
+
 struct iw_pk_event
 {
 	__u16		len;			/* Real lenght of this stuff */
diff -uNr a/iwpriv.c b/iwpriv.c
--- a/iwpriv.c	2018-08-16 13:31:33.000000000 +0000
+++ b/iwpriv.c	2018-08-22 03:29:58.578355343 +0000
@@ -456,7 +456,6 @@
 	  wrq.u.data.flags = subcmd;
 	}
     }
-
   /* Perform the private ioctl */
   if(ioctl(skfd, priv[k].cmd, &wrq) < 0)
     {
@@ -472,7 +471,7 @@
       int	j;
       int	n = 0;		/* number of args */
 
-      printf("%-8.16s  %s:", ifname, cmdname);
+      printf("%-8.16s  %s:\n", ifname, cmdname);
 
       /* Check where is the returned data */
       if((priv[k].get_args & IW_PRIV_SIZE_FIXED) &&
@@ -503,7 +502,35 @@
 	case IW_PRIV_TYPE_CHAR:
 	  /* Display args */
 	  buffer[n] = '\0';
-	  printf("%s\n", buffer);
+  	  if (!strcmp(cmdname,"get_mactable_st") || !strcmp(cmdname,"get_mac_table"))
+	  {
+		RT_802_11_MAC_TABLE  *mp;
+		MACHTTRANSMIT_SETTING LastRx;
+		int  i;
+		mp = (RT_802_11_MAC_TABLE *)wrq.u.data.pointer;
+		unsigned long TXRate, RxRate;
+
+		printf("%-4s%-20s%-4s%-10s%-20s%-20s%-20s%-20s%-20s\n",
+			"AID", "MAC_Address", "PSM", "MimoPs", "AvgRssi0", "ConnectedTime", "LastRxRate", "LastTxRate", "APIDX");
+		for(i = 0 ; i < mp->Num ; i++)
+		{
+			printf("%-4d", mp->Entry[i].Aid);
+			printf("%02X:%02X:%02X:%02X:%02X:%02X   ",
+				mp->Entry[i].Addr[0], mp->Entry[i].Addr[1],
+				mp->Entry[i].Addr[2], mp->Entry[i].Addr[3],
+				mp->Entry[i].Addr[4], mp->Entry[i].Addr[5]);
+			printf("%-4d", mp->Entry[i].Psm);
+			printf("%-10d", mp->Entry[i].MimoPs);
+			printf("%-20d", mp->Entry[i].AvgRssi0);
+			printf("%-20d", mp->Entry[i].ConnectedTime);
+			printf("%-20d", mp->Entry[i].ReRxRate);
+			printf("%-20d", mp->Entry[i].ReTxRate);
+			printf("%-20d", mp->Entry[i].ApIdx);
+			printf("\n");
+		}
+	  }
+	  else
+	  	printf("%s\n", buffer);
 	  break;
 
 	case IW_PRIV_TYPE_FLOAT:
