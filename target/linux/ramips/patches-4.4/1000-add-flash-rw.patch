diff -urN a/drivers/mtd/maps/Makefile b/drivers/mtd/maps/Makefile
--- a/drivers/mtd/maps/Makefile	2018-10-11 17:24:39.605459517 +0800
+++ b/drivers/mtd/maps/Makefile	2018-10-11 17:24:08.508943765 +0800
@@ -17,6 +17,7 @@
 obj-$(CONFIG_MTD_TSUNAMI)	+= tsunami_flash.o
 obj-$(CONFIG_MTD_PXA2XX)	+= pxa2xx-flash.o
 obj-$(CONFIG_MTD_PHYSMAP)	+= physmap.o
+obj-$(CONFIG_MTD_PHYSMAP)       += ralink-flash.o
 obj-$(CONFIG_MTD_PHYSMAP_OF)	+= physmap_of.o
 ifdef CONFIG_MTD_PHYSMAP_OF_VERSATILE
 obj-$(CONFIG_MTD_PHYSMAP_OF)	+= physmap_of_versatile.o
diff -urN a/drivers/mtd/maps/ralink-flash.c b/drivers/mtd/maps/ralink-flash.c
--- a/drivers/mtd/maps/ralink-flash.c	1970-01-01 08:00:00.000000000 +0800
+++ b/drivers/mtd/maps/ralink-flash.c	2018-10-11 17:24:15.925066905 +0800
@@ -0,0 +1,123 @@
+/* ralink-flash.c
+ *
+ * Steven Liu <steven_liu@ralinktech.com.tw>:
+ *   - initial approach
+ *
+ * Winfred Lu <winfred_lu@ralinktech.com.tw>:
+ *   - 32MB flash support for RT3052
+ *   - flash API
+ */
+#include <linux/version.h>
+#include <linux/module.h>
+#include <linux/types.h>
+#include <linux/init.h>
+#include <linux/kernel.h>
+#include <linux/err.h>
+
+#include <linux/slab.h>
+#include <asm/io.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/map.h>
+#include <linux/mtd/concat.h>
+#include <linux/mtd/partitions.h>
+#if defined (CONFIG_MIPS)
+#include <asm/addrspace.h>
+#endif
+#include "ralink-flash.h"
+
+
+int ra_mtd_write_nm(char *name, loff_t to, size_t len, const u_char *buf)
+{
+	int ret = -1;
+	size_t rdlen, wrlen;
+	struct mtd_info *mtd;
+	struct erase_info ei;
+	u_char *bak = NULL;
+
+	mtd = get_mtd_device_nm(name);
+	if (IS_ERR(mtd))
+		return (int)mtd;
+	if (len > mtd->erasesize) {
+		put_mtd_device(mtd);
+		return -E2BIG;
+	}
+
+	bak = kmalloc(mtd->erasesize, GFP_KERNEL);
+	if (bak == NULL) {
+		put_mtd_device(mtd);
+		return -ENOMEM;
+	}
+
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,36)
+	ret = mtd->read(mtd, to, mtd->erasesize, &rdlen, bak);
+#else
+	ret = mtd_read(mtd, to, mtd->erasesize, &rdlen, bak);
+#endif
+
+	if (ret != 0) {
+		put_mtd_device(mtd);
+		kfree(bak);
+		return ret;
+	}
+	if (rdlen != mtd->erasesize)
+		printk("warning: ra_mtd_write: rdlen is not equal to erasesize\n");
+
+	memcpy(bak, buf, len);
+
+	ei.mtd = mtd;
+	ei.callback = NULL;
+	ei.addr = to;
+	ei.len = mtd->erasesize;
+	ei.priv = 0;
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,36)
+	ret = mtd->erase(mtd, &ei);
+#else
+	ret = mtd_erase(mtd, &ei);
+#endif
+	if (ret != 0) {
+		put_mtd_device(mtd);
+		kfree(bak);
+		return ret;
+	}
+
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,36)
+	ret = mtd->write(mtd, to, mtd->erasesize, &wrlen, bak);
+#else
+	ret = mtd_write(mtd, to, mtd->erasesize, &wrlen, bak);
+#endif
+
+
+	put_mtd_device(mtd);
+	kfree(bak);
+	return ret;
+}
+
+
+int ra_mtd_read_nm(char *name, loff_t from, size_t len, u_char *buf)
+{
+	int ret;
+	size_t rdlen;
+	struct mtd_info *mtd;
+
+	mtd = get_mtd_device_nm(name);
+	if (IS_ERR(mtd))
+		return (int)mtd;
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,36)
+	ret = mtd->read(mtd, from, len, &rdlen, buf);
+#else
+	ret = mtd_read(mtd, from, len, &rdlen, buf);
+#endif
+
+	if (rdlen != len)
+		printk("warning: ra_mtd_read_nm: rdlen is not equal to len\n");
+
+	put_mtd_device(mtd);
+	return ret;
+}
+
+#ifdef RA_MTD_RW_BY_NUM
+EXPORT_SYMBOL(ra_mtd_write);
+EXPORT_SYMBOL(ra_mtd_read);
+#endif
+EXPORT_SYMBOL(ra_mtd_write_nm);
+EXPORT_SYMBOL(ra_mtd_read_nm);
diff -urN a/drivers/mtd/maps/ralink-flash.h b/drivers/mtd/maps/ralink-flash.h
--- a/drivers/mtd/maps/ralink-flash.h	1970-01-01 08:00:00.000000000 +0800
+++ b/drivers/mtd/maps/ralink-flash.h	2018-10-11 17:24:20.725146560 +0800
@@ -0,0 +1,23 @@
+#ifndef __RALINK_FLASH_H__
+#define __RALINK_FLASH_H__
+
+#define MTD_BOOT_PART_SIZE	0x30000
+#define	MTD_CONFIG_PART_SIZE	0x10000
+#define	MTD_FACTORY_PART_SIZE	0x10000
+
+#define MTD_ROOTFS_PART_SIZE	IMAGE1_SIZE - (MTD_BOOT_PART_SIZE + MTD_CONFIG_PART_SIZE \
+					+ MTD_FACTORY_PART_SIZE + CONFIG_MTD_KERNEL_PART_SIZ)
+#define	MTD_KERN_PART_SIZE	CONFIG_MTD_KERNEL_PART_SIZ
+#define IMAGE1_SIZE		0x800000
+
+#define BOOT_FROM_NOR	0
+#define BOOT_FROM_NAND	2
+#define BOOT_FROM_SPI	3
+
+
+#define RSA256_SIG_SIZE 0
+#define PUB_KEY_SIZE 0
+
+int ra_check_flash_type(void);
+
+#endif //__RALINK_FLASH_H__
